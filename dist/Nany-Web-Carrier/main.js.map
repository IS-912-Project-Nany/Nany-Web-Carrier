{"version":3,"sources":["./src/app/requisitos/requisitos.component.ts","./src/app/requisitos/requisitos.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/environments/environment.ts","./src/app/services/usuarios.service.ts","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/historial-ordenes/historial-ordenes.component.html","./src/app/historial-ordenes/historial-ordenes.component.ts","./src/app/app.module.ts","./src/app/app.config.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/services/ciudades.service.ts","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/services/auth.service.ts","./src/app/services/ordenes.service.ts","./src/app/landing-page/landing-page.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/detalle-orden/detalle-orden.component.ts","./src/app/detalle-orden/detalle-orden.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-requisitos',\n  templateUrl: './requisitos.component.html'\n})\nexport class RequisitosComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid\">\n    <img src=\"../assets/img/Logo-Carrier.png\" id=\"logo\" routerLink=\"/\">\n    <h5 id=\"text1\">Requisitos</h5>\n    <div class=\"requirement\">\n        <h6>♦ Una buena actitud en todo momento</h6>\n        <h6>♦ Poseer motocicleta propia y en buen estado</h6>\n        <h6>♦ Licencia de conducir vigente</h6>\n        <h6>♦ Contar con minimo 1 año de experiencia</h6>\n        <h6>♦ Celular con datos moviles</h6>\n        <h6>♦ Tener mas de 20 años</h6>\n        <h6>♦ Tomar una capacitacion con nosotros</h6>\n    </div>\n    <div class=\"requirement2\">\n        <button type=\"button\" class=\"btn btn-success\" id=\"btn-req\" routerLink=\"/Registro\">Registrarse</button>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { UsuariosService } from '../services/usuarios.service';\r\nimport { CiudadesService } from '../services/ciudades.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  emailPattern =\r\n    /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n  passwordPattern = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)([A-Za-z\\d$@$.!%?&]){8,}$/;\r\n  dniPattern = /[0-1][0-9][0-2][0-9]-[1,2][0,9][0-9][0-9]-[0-9]{5}/g;\r\n\r\n  formRegister = new FormGroup({\r\n    nombre: new FormControl('', [Validators.required, Validators.maxLength(30)]),\r\n    apellido: new FormControl('', [\r\n      Validators.required,\r\n      Validators.maxLength(30),\r\n    ]),\r\n    correo: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(this.emailPattern),\r\n    ]),\r\n    password: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(this.passwordPattern),\r\n    ]),\r\n    ciudad: new FormControl('', [Validators.required]),\r\n    fechaNacimiento: new FormControl('', [Validators.required]),\r\n    dni: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(this.dniPattern),\r\n    ]),\r\n    genero: new FormControl('', [Validators.required]),\r\n    motocicleta: new FormControl('', [Validators.required]),\r\n    licencia: new FormControl('', [Validators.required]),\r\n    datosMoviles: new FormControl('', [Validators.required]),\r\n    experiencia: new FormControl('', [Validators.required]),\r\n  });\r\n  confirmarPassword = new FormControl('',[Validators.required]);\r\n  responseRegistro: any = '';\r\n  ciudades: any = []\r\n  experiencias = [\r\n    { idExperiencia: 1, experiencia:\"Un año\"},\r\n    { idExperiencia: 2, experiencia:\"Dos años\"},\r\n    { idExperiencia: 3, experiencia:\"Tres años\"},\r\n    { idExperiencia: 4, experiencia:\"No tengo experiencia\"},\r\n  ]\r\n\r\n  constructor(\r\n    private usuariosService: UsuariosService,\r\n    private ciudadesService: CiudadesService,\r\n    private cookiesService: CookieService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.ciudadesService.obtenerCiudades().subscribe(\r\n      result=>{\r\n        this.ciudades = result;\r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  registrar() {\r\n    let ciudadSeleccionada: any = {};\r\n    this.ciudades.forEach(ciudad => {\r\n      if(this.formRegister.value.ciudad == ciudad.idCiudad){\r\n        ciudadSeleccionada.idCiudad = this.formRegister.value.ciudad;\r\n        ciudadSeleccionada.ciudad = ciudad.ciudad;\r\n      }\r\n    });\r\n\r\n    let experienciaSeleccionada: any = {};\r\n    this.experiencias.forEach(exp => {\r\n      if(this.formRegister.value.experiencia == exp.idExperiencia){\r\n        experienciaSeleccionada.idExperiencia = this.formRegister.value.experiencia;\r\n        experienciaSeleccionada.experiencia = exp.experiencia;\r\n      }\r\n    });\r\n\r\n    let nuevoMotorista = {\r\n      nombre: this.formRegister.value.nombre,\r\n      apellido: this.formRegister.value.apellido,\r\n      correo: this.formRegister.value.correo,\r\n      password: this.formRegister.value.password,\r\n      ciudad: ciudadSeleccionada,\r\n      fechaNacimiento: this.formRegister.value.fechaNacimiento,\r\n      genero: this.formRegister.value.genero,\r\n      tipoUsuario: { \r\n        motoristaInfo:{\r\n          dni: this.formRegister.value.dni,\r\n          motocicleta: this.formRegister.value.motocicleta,\r\n          licencia: this.formRegister.value.licencia,\r\n          datosMoviles: this.formRegister.value.datosMoviles,\r\n          experiencia: experienciaSeleccionada,\r\n          estadoAdmision: false\r\n        },\r\n        idUsuario: 2, \r\n        tipo: \"motorista\"\r\n      },\r\n      ordenes: []\r\n    }\r\n    console.log(\"Se registrara el motorista:\", nuevoMotorista);\r\n\r\n    this.usuariosService.registrar(nuevoMotorista).subscribe(\r\n      result=>{\r\n        if (result.code == 0) {\r\n          this.responseRegistro = result;\r\n          this.correo.setValue('');\r\n        } else {\r\n          const dateNow = new Date();\r\n          dateNow.setMinutes(dateNow.getMinutes() + 60);\r\n          this.cookiesService.set('nanyUsuarioId', result.usuario._id, dateNow);\r\n          this.cookiesService.set(\r\n            'nanyUsuarioNombre',\r\n            result.usuario.nombre,\r\n            dateNow\r\n          );\r\n          this.cookiesService.set(\r\n            'nanyUsuarioApellido',\r\n            result.usuario.apellido,\r\n            dateNow\r\n          );\r\n\r\n        }\r\n        console.log(result);\r\n        Swal.fire({\r\n          icon: 'success',\r\n          title: 'Tu registro ha sido exitoso!',\r\n          text: 'Te avisaremos al correo cuando tu solicitud sea aceptada',\r\n        });\r\n\r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  get nombre() {\r\n    return this.formRegister.get('nombre');\r\n  }\r\n\r\n  get apellido() {\r\n    return this.formRegister.get('apellido');\r\n  }\r\n\r\n  get correo() {\r\n    return this.formRegister.get('correo');\r\n  }\r\n\r\n  get password() {\r\n    return this.formRegister.get('password');\r\n  }\r\n\r\n  get ciudad() {\r\n    return this.formRegister.get('ciudad');\r\n  }\r\n\r\n  get fechaNacimiento() {\r\n    return this.formRegister.get('fechaNacimiento');\r\n  }\r\n\r\n  get dni() {\r\n    return this.formRegister.get('dni');\r\n  }\r\n\r\n  get genero(){\r\n    return this.formRegister.get('genero');\r\n  }\r\n\r\n  get datosMoviles(){\r\n    return this.formRegister.get('datosMoviles');\r\n  }\r\n\r\n  get licencia(){\r\n    return this.formRegister.get('licencia');\r\n  }\r\n\r\n  get motocicleta(){\r\n    return this.formRegister.get('motocicleta');\r\n  }\r\n\r\n  get experiencia() {\r\n    return this.formRegister.get('experiencia');\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <img src=\"../assets/img/Logo-Carrier.png\" id=\"logo\" routerLink=\"/\">\r\n    <div class=\"info\">\r\n        <h5>¿Quieres ser parte de nany?</h5>\r\n        <button type=\"button\" class=\"btn btn-success\" id=\"btn-registro\" routerLink=\"/Requisitos\">Lee los requisitos</button>\r\n    </div>\r\n    <form class=\"needs-validation\" novalidate [formGroup]=\"formRegister\">\r\n        <div class=\"form-contenedor pb-1\">\r\n            <h2>Registrarse</h2>\r\n            <div>\r\n                <h5>Nombre</h5>\r\n                <input type=\"text\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': nombre.invalid && (nombre.dirty || nombre.touched), 'is-valid': nombre.valid}\"\r\n                    formControlName=\"nombre\" required>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"nombre.errors\">\r\n                    <span *ngIf=\"nombre.errors.maxlength\">Nombre máximo de 30 caracteres</span>\r\n                    <span *ngIf=\"nombre.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h5>Apellido</h5>\r\n                <input type=\"text\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': apellido.invalid && (apellido.dirty || apellido.touched), 'is-valid': apellido.valid}\"\r\n                    formControlName=\"apellido\" required>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"apellido.errors\">\r\n                    <span *ngIf=\"apellido.errors.maxlength\">Apellido máximo de 30 caracteres</span>\r\n                    <span *ngIf=\"apellido.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h5>Correo electrónico</h5>\r\n                <input type=\"email\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': correo.invalid && (correo.dirty || correo.touched), 'is-valid': correo.valid}\"\r\n                    placeholder=\"ejemplo@gmail.com\" formControlName=\"correo\" required>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"correo.errors\">\r\n                    <span *ngIf=\"correo.errors.pattern\">Correo Inválido</span>\r\n                    <span *ngIf=\"correo.errors.required && (responseRegistro.code != 0)\">Este campo no puede quedar vacío</span>\r\n                    <span *ngIf=\"responseRegistro.code == 0\">{{responseRegistro.message}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"register\">\r\n            <div>\r\n                <h5>Contraseña</h5>\r\n                <input type=\"password\" name=\"password\" autocomplete=\"on\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': password.invalid && (password.dirty || password.touched), 'is-valid': password.valid}\"\r\n                    formControlName=\"password\" required>\r\n                <span *ngIf=\"!password.errors || (!password.touched && !password.dirty)\" class=\"password-adv\">Mínimo 8\r\n                    caracteres, incluyendo al menos una mayúscula y numero.</span>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"password.errors\">\r\n                    <span *ngIf=\"password.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"pt-2\">\r\n                <h5>Confirmar Contraseña</h5>\r\n                <input type=\"password\" name=\"confirmPassword\" autocomplete=\"on\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': (confirmarPassword.value != password.value && confirmarPassword.touched), 'is-valid': (confirmarPassword.value == password.value) && confirmarPassword.touched}\"\r\n                    [formControl]=\"confirmarPassword\" required>\r\n                <div class=\"invalid-feedback register-feedback\">\r\n                    <span *ngIf=\"confirmarPassword.value != password.value\">Contraseña no coinciden.</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"pt-2\">\r\n                <h5>Ciudad</h5>\r\n                <select class=\"form-select\"\r\n                    [ngClass]=\"{'is-invalid': ciudad.invalid && (ciudad.dirty || ciudad.touched), 'is-valid': ciudad.valid}\"\r\n                    formControlName=\"ciudad\" required>\r\n                    <option disabled selected>Seleccione</option>\r\n                    <option *ngFor=\"let ciudad of ciudades\" [ngValue]=\"ciudad.idCiudad\">{{ciudad.ciudad}}</option>\r\n                </select>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"ciudad.errors\">\r\n                    <span *ngIf=\"ciudad.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"pt-2\">\r\n                <h5>Fecha de nacimiento</h5>\r\n                <input type=\"date\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': fechaNacimiento.invalid && (fechaNacimiento.dirty || fechaNacimiento.touched), 'is-valid': fechaNacimiento.valid}\"\r\n                    formControlName=\"fechaNacimiento\" required>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"fechaNacimiento.errors\">\r\n                    <span *ngIf=\"fechaNacimiento.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n            </div>\r\n            <div class=\"pt-2\">\r\n                <h5>Numero de DNI</h5>\r\n                <input type=\"text\" class=\"form-control inp-form\"\r\n                    [ngClass]=\"{'is-invalid': dni.invalid && (dni.dirty || dni.touched), 'is-valid': dni.valid}\"\r\n                    placeholder=\"Forma: xxxx-xxxx-xxxxx\" formControlName=\"dni\" required>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"dni.errors\">\r\n                    <span *ngIf=\"dni.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n                <div *ngIf=\"dni.errors\">\r\n                    <span *ngIf=\"dni.errors.pattern  && (dni.dirty || dni.touched)\" class=\"password-adv\">Ejemplo:\r\n                        0801-1999-03213</span>\r\n                </div>\r\n            </div>\r\n            <h5>Género</h5>\r\n            <div class=\"chk-form mt-2\">\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=true formControlName=\"genero\" name=\"genero\"\r\n                        id=\"generoMale\" required>\r\n                    <label class=\"form-check-label\" for=\"generoMale\">Masculino</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=false formControlName=\"genero\" name=\"genero\"\r\n                        id=\"generoFemale\" required>\r\n                    <label class=\"form-check-label\" for=\"generoFemale\">Femenino</label>\r\n                </div>\r\n            </div>\r\n            <h5>¿Posee motocicleta?</h5>\r\n            <div class=\"chk-form\">\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=true formControlName=\"motocicleta\"\r\n                        name=\"motocicleta\" id=\"motocicletaTrue\" required>\r\n                    <label class=\"form-check-label\" for=\"motocicletaTrue\">Si</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=false formControlName=\"motocicleta\"\r\n                        name=\"motocicleta\" id=\"motocicletaFalse\" required>\r\n                    <label class=\"form-check-label\" for=\"motocicletaFalse\">No</label>\r\n                </div>\r\n            </div>\r\n            <h5>¿Posee licencia de conducir vigente?</h5>\r\n            <div class=\"chk-form\">\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=true formControlName=\"licencia\" name=\"licencia\"\r\n                        id=\"lincenciaTrue\" required>\r\n                    <label class=\"form-check-label\" for=\"lincenciaTrue\">Si</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=false formControlName=\"licencia\" name=\"licencia\"\r\n                        id=\"lincenciaFalse\" required>\r\n                    <label class=\"form-check-label\" for=\"lincenciaFalse\">No</label>\r\n                </div>\r\n            </div>\r\n            <h5>¿Posee celular con datos moviles?</h5>\r\n            <div class=\"chk-form\">\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=true formControlName=\"datosMoviles\"\r\n                        name=\"datosMoviles\" id=\"datosMovilesTrue\" required>\r\n                    <label class=\"form-check-label\" for=\"datosMovilesTrue\">Si</label>\r\n                </div>\r\n                <div class=\"form-check form-check-inline\">\r\n                    <input class=\"form-check-input\" type=\"radio\" [value]=false formControlName=\"datosMoviles\"\r\n                        name=\"datosMoviles\" id=\"datosMovilesFalse\" required>\r\n                    <label class=\"form-check-label\" for=\"datosMovilesFalse\">No</label>\r\n                </div>\r\n            </div>\r\n            <div  class=\"pt-2\">\r\n                <h5>Nivel de experiencia</h5>\r\n                <select class=\"form-select\" formControlName=\"experiencia\" required\r\n                [ngClass]=\"{'is-invalid': experiencia.invalid && (experiencia.dirty || experiencia.touched), 'is-valid': experiencia.valid}\">\r\n                    <option disabled selected>Seleccione</option>\r\n                    <option *ngFor=\"let experiencia of experiencias\" [ngValue]=\"experiencia.idExperiencia\">{{experiencia.experiencia}}</option>\r\n                </select>\r\n                <div class=\"invalid-feedback register-feedback\" *ngIf=\"experiencia.errors\">\r\n                    <span *ngIf=\"experiencia.errors.required\">Este campo no puede quedar vacío</span>\r\n                </div>\r\n            </div>\r\n            <button [disabled]=\"formRegister.invalid || (password.value != confirmarPassword.value)\" type=\"button\"\r\n                class=\"btn btn-success mt-5\" id=\"btn-login\" (click)=\"registrar()\">Registrarse</button>\r\n            <div class=\"registro-add-response\">\r\n                <span *ngIf=\"responseRegistro.code == 0\">{{responseRegistro.message}}</span>\r\n            </div>\r\n            <h6>¿Ya tienes una cuenta?</h6>\r\n            <a routerLink=\"/Inicio-sesion\" id=\"registro\">Inicia sesión</a>\r\n        </div>\r\n    </form>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuariosService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  registrar(data: any): Observable<any> {\n    return this.httpClient.post(`${API_BASE_URL}/usuarios`, data);\n  }\n\n  obtenerUsuario(idUsuario: String): Observable<any> {\n    return this.httpClient.get(`${API_BASE_URL}/usuarios/${idUsuario}`);\n  }\n\n  obtenerOrdenesUsuario(idUsuario: String): Observable<any> {\n    return this.httpClient.get(`${API_BASE_URL}/usuarios/${idUsuario}/ordenes`);\n  }\n\n  actualizarEstadoOrden(idUsuario: String, idOrden: String, tipoEstado: any): Observable<any> {\n    return this.httpClient.put(`${API_BASE_URL}/usuarios/${idUsuario}/ordenes/${idOrden}`, tipoEstado);\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CookieService } from 'ngx-cookie-service';\nimport { OrdenesService } from '../services/ordenes.service';\nimport { UsuariosService } from '../services/usuarios.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html'\n})\nexport class HomepageComponent implements OnInit {\n  ordenesDisponibles:any = [];\n  ordenesTomadas:any = [];\n  nombreUsuario: String = '';\n  idUsuario: String = '';\n  ordenProgreso: any = '';\n  estadoOrden: any = '';\n  ordenesEntregadas: any = [];\n  indiceOrdenProgreso: Number;\n\n  constructor(\n    private ordenesService: OrdenesService,\n    private _route:Router,\n    private cookiesService: CookieService,\n    private usuariosService: UsuariosService\n  ) { }\n\n  ngOnInit(): void {\n    if (this.cookiesService.check('nanyUsuarioNombre')) {\n      this.nombreUsuario = this.cookiesService.get('nanyUsuarioNombre');\n      this.idUsuario = this.cookiesService.get('nanyUsuarioId');\n\n      this.ordenesService.obtenerOrdenes().subscribe(\n        result=>{\n          let index = -1;\n          for (let i = 0; i < result.length; i++) {\n  \n            if (result[i].tipoEstado.idEstado == \"0\") {\n              this.ordenesDisponibles.push(result[i]);\n              console.log('Disponible',this.ordenesDisponibles);\n\n            } else if (result[i].tipoEstado.idEstado == \"4\") {\n              this.ordenesEntregadas.push(result[i]);\n              console.log('Entregadas', this.ordenesEntregadas);\n\n            } else {\n              this.ordenesTomadas.push(result[i]);\n              console.log('Tomada',this.ordenesTomadas);\n              index++;\n              \n              if (this.idUsuario == result[i].motorista._id) {\n                this.ordenProgreso = result[i];\n                this.estadoOrden = this.ordenProgreso.tipoEstado.nombreEstado;\n                this.indiceOrdenProgreso = index;\n                console.log(this.ordenProgreso);\n              } \n            }  \n          }\n        },\n        error=>{\n          console.log(error);\n        }\n      )\n    } \n  } \n\n  enOrigen(){\n    this.ordenProgreso.tipoEstado = {\n      idEstado: \"2\",\n      nombreEstado: \"En origen\"\n    };\n\n    this.usuariosService.actualizarEstadoOrden(this.idUsuario, this.ordenProgreso._id, this.ordenProgreso).subscribe(\n      result=>{\n        console.log(result);\n        this.estadoOrden = this.ordenProgreso.tipoEstado.nombreEstado;\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n\n  }\n\n  enDestino(){\n    this.ordenProgreso.tipoEstado = {\n      idEstado: \"3\",\n      nombreEstado: \"En destino\"\n    };\n\n    this.usuariosService.actualizarEstadoOrden(this.idUsuario, this.ordenProgreso._id, this.ordenProgreso).subscribe(\n      result=>{\n        console.log(result);\n        this.estadoOrden = this.ordenProgreso.tipoEstado.nombreEstado;\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n  }\n\n  entregada(){\n    this.ordenProgreso.tipoEstado = {\n      idEstado: \"4\",\n      nombreEstado: \"Entregada\"\n    };\n\n    this.usuariosService.actualizarEstadoOrden(this.idUsuario, this.ordenProgreso._id, this.ordenProgreso).subscribe(\n      result=>{\n        console.log(result);\n        Swal.fire({\n          icon: 'success',\n          title: 'Excelente trabajo!',\n          text: 'Has entregado la orden correctamente'\n        });\n        console.log(this.indiceOrdenProgreso);\n        this.ordenesTomadas.splice(this.indiceOrdenProgreso, 1);\n        this.ordenProgreso = '';\n        console.log(this.ordenesTomadas);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n  }\n}\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container-fluid\">\r\n    <h2 class=\"text2\">¡Hola {{nombreUsuario}}!</h2>\r\n    <div class=\"inprogress\" *ngIf=\"ordenProgreso != ''\">\r\n        <h6>Destino: {{ordenProgreso.ubicacionOrden.direccion}}</h6>\r\n        <h5>Comprador: {{ordenProgreso.cliente.nombre}} {{ordenProgreso.cliente.apellido}}</h5>\r\n        <h5 style=\"color: #8E03CF;\">Estado de orden: {{estadoOrden}}</h5>\r\n        <button type=\"button\" class=\"btn btn-progress1\" [disabled]=\"estadoOrden == 'En camino' || estadoOrden == 'En origen' || estadoOrden == 'En destino'\">En camino</button>\r\n        <button type=\"button\" class=\"btn btn-progress2\" (click)=\"enOrigen()\" [disabled]=\"estadoOrden == 'En destino' || estadoOrden == 'En origen'\">En origen</button>\r\n        <button type=\"button\" class=\"btn btn-progress3\" (click)=\"enDestino()\" [disabled]=\"estadoOrden == 'En camino' || estadoOrden == 'En destino'\">En destino</button>\r\n        <button type=\"button\" class=\"btn btn-progress4\" (click)=\"entregada()\" [disabled]=\"estadoOrden == 'En camino' || estadoOrden == 'En origen'\">Entregada</button>\r\n    </div>\r\n    <h5 class=\"text2\">Ordenes disponibles</h5>\r\n    <h4 *ngIf=\"ordenesDisponibles==''\" class=\"text4\">No hay ordenes disponibles en este momento</h4>\r\n    <div class=\"available\" *ngFor=\"let orden of ordenesDisponibles\" [routerLink]=\"['/Detalle-orden', orden._id]\">\r\n        <img src=\"../../assets/img/las-compras-en-linea.png\" alt=\"imagen\">\r\n        <h5>Destino: {{orden.ubicacionOrden.direccion}}</h5>\r\n        <h6>Comprador: {{orden.cliente.nombre}} {{orden.cliente.apellido}}</h6>\r\n        <h6>Total a pagar: {{orden.factura.total | currency:'Lps. '}}</h6>\r\n        <h4>Fecha de compra: {{orden.fecha | date:'dd-MM-yyyy'}}</h4>\r\n    </div>\r\n    <h5 class=\"text2\">Ordenes tomadas</h5>\r\n    <h5 class=\"text3\">No han sido entregadas</h5>\r\n    <h4 *ngIf=\"ordenesTomadas==''\" class=\"text4\">No hay ordenes tomadas en este momento</h4>\r\n    <div class=\"taken\" *ngFor=\"let orden of ordenesTomadas\">\r\n        <img src=\"../../assets/img/compras.png\" alt=\"imagen\">\r\n        <h5>Destino: {{orden.ubicacionOrden.direccion}}</h5>\r\n        <h6>Comprador: {{orden.cliente.nombre}} {{orden.cliente.apellido}}</h6>\r\n        <h6>Cantidad: {{orden.factura.total | currency:'Lps. '}}</h6>\r\n        <h4>Fecha de compra: {{orden.fecha | date:'dd-MM-yyyy'}}</h4>\r\n    </div>\r\n</div>\r\n\r\n<app-footer></app-footer>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'Nany-Web-Carrier';\r\n}\r\n","<router-outlet></router-outlet>\r\n","<app-navbar></app-navbar>\r\n<div id=\"historialContainer\" class=\"container pb-3\">\r\n    <h5 class=\"text2\">Mis órdenes entregadas</h5>\r\n    <hr>\r\n    <div id=\"historial\">\r\n        <div class=\"row\" *ngFor=\"let historial of historialOrdenes; let i = index\">\r\n            <h3 class=\"text-initial mt-2\">{{historial.fecha | date:'dd-MM-yyyy'}}</h3>\r\n            <hr> \r\n            <div class=\"col-8 mt-2\">\r\n                <h6>Destino: {{historial.ubicacionOrden.direccion}}</h6>\r\n                <h6>Comprador: {{historial.cliente.nombre}} {{historial.cliente.apellido}}</h6>\r\n                <h6>Total de Factura: {{historial.factura.total | currency:'Lps. '}}</h6>\r\n                <h6>Comision otorgada: {{historial.factura.comisionMotorista | currency:'Lps. '}}</h6>\r\n            </div>\r\n            <a data-bs-toggle=\"modal\" data-bs-target=\"#modalInvoice\" class=\"col-4 mb-2\" (click)=\"verDetalleOrden(i)\">\r\n                <img class=\"d-block img-historial\" src=\"../../assets/img/documento.png\" alt=\"\">\r\n            </a>\r\n            <hr>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"modalInvoice\" tabindex=\"-1\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\" *ngIf=\"ordenDetalle != ''\">\r\n            <div class=\"modal-header\">\r\n                <img src=\"../../assets/img/Logo-Carrier.png\" id=\"logo\">\r\n            </div>\r\n            <div class=\"modal-body container\">\r\n                <h3 class=\"text-center\">Factura</h3>\r\n                <table class=\"table mt-3\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\">Producto</th>\r\n                            <th scope=\"col\">Cantidad</th>\r\n                            <th scope=\"col\">Precio</th>\r\n                            <th scope=\"col\">ISV</th>\r\n                            <th scope=\"col\">Total</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let item of ordenDetalle\">\r\n                            <td class=\"invoice-description\">{{item.producto.nombre}}</td>\r\n                            <td class=\"invoice-cost\">X{{item.cantidad}}</td>\r\n                            <td class=\"invoice-cost\">L.{{item.producto.precio | number: '1.2-2'}}</td>\r\n                            <td class=\"invoice-cost\">L.{{item.producto.isv | number: '1.2-2'}}</td>\r\n                            <td class=\"invoice-cost\">L.{{((item.producto.precio + item.producto.isv) * item.cantidad) | number : '1.2-2'}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <th class=\"pb-0\">Subtotal:</th>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td class=\"invoice-cost pb-0\">L.{{factura.subtotal | number: '1.2-2'}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th class=\"py-0\">Costo Envio:</th>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td class=\"invoice-cost py-0\">L.{{factura.costoEnvio | number: '1.2-2'}}</td>\r\n                        </tr>\r\n                        <tr class=\"pb-2\">\r\n                            <th class=\"py-0 total-invoice\">Total:</th>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td class=\"total-invoice-number py-0\">L.{{factura.total | number: '1.2-2'}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th class=\"py-0\">Comisión otorgada:</th>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td></td>\r\n                            <td class=\"total-invoice-number py-0\">L.{{factura.comisionMotorista | number: '1.2-2'}}</td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary btn-modal\" data-bs-dismiss=\"modal\">Cerrar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<app-footer  *ngIf=\"historialOrdenes.length != 0\"></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UsuariosService } from '../services/usuarios.service';\n\n@Component({\n  selector: 'app-historial-ordenes',\n  templateUrl: './historial-ordenes.component.html'\n})\nexport class HistorialOrdenesComponent implements OnInit {\n  historialOrdenes:any = [];\n  ordenDetalle: any = '';\n  factura: any = '';\n  idUsuario: any  = this.cookiesService.get('nanyUsuarioId');\n\n  constructor(\n    private usuariosService: UsuariosService,\n    private cookiesService: CookieService\n  ) { }\n\n  ngOnInit(): void {\n    this.usuariosService.obtenerOrdenesUsuario(this.idUsuario).subscribe(\n      result=>{\n        for (let i = 0; i < result.ordenes.length; i++) {\n          if (result.ordenes[i].tipoEstado.idEstado == \"4\") {\n            result.ordenes.sort((a, b) => {\n              a = new Date(a.fecha);\n              b = new Date(b.fecha);\n              return a > b ? -1 : a < b ? 1 : 0;\n            });\n            this.historialOrdenes.push(result.ordenes[i]);\n            console.log('Historial', this.historialOrdenes);\n          } \n        }\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n  }\n\n  verDetalleOrden(index){\n    this.ordenDetalle = this.historialOrdenes[index].detalleProductos;\n    this.factura = this.historialOrdenes[index].factura;\n  }\n\n}\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { RequisitosComponent } from './requisitos/requisitos.component';\r\nimport { HomepageComponent } from './homepage/homepage.component';\r\nimport { DetalleOrdenComponent } from './detalle-orden/detalle-orden.component';\r\nimport { HistorialOrdenesComponent } from './historial-ordenes/historial-ordenes.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MapComponent } from './map/map.component'; \r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingPageComponent,\r\n    LoginComponent,\r\n    FooterComponent,\r\n    RegisterComponent,\r\n    NavbarComponent,\r\n    RequisitosComponent,\r\n    HomepageComponent,\r\n    DetalleOrdenComponent,\r\n    HistorialOrdenesComponent,\r\n    MapComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FontAwesomeModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    NgxSpinnerModule, \r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [CookieService],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const API_BASE_URL = 'https://nany-rest-api.herokuapp.com'; /*'http://localhost:8888';*/","import { Component, AfterViewInit, Output, EventEmitter} from '@angular/core';\nimport * as L from 'leaflet';\n\nimport 'leaflet/dist/images/marker-shadow.png';\nimport 'leaflet/dist/images/marker-icon.png';\nimport 'leaflet/dist/images/marker-icon-2x.png';\n\n@Component({\n  selector: 'app-map',\n  templateUrl: './map.component.html',\n  styleUrls: ['./map.component.sass']\n})\nexport class MapComponent implements AfterViewInit {\n  map: any;\n\n  initMap(lat, long) {\n    this.map = L.map('map', {\n      center: [lat, long],\n      zoom: 11.0,\n    });\n    const tiles = L.tileLayer(\n      'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',\n      {\n        maxZoom: 18,\n        minZoom: 3,\n        attribution:\n          '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>',\n      }\n    );\n\n    tiles.addTo(this.map);\n    let marker;\n    marker = L.marker([lat, long], {\n      draggable: false,\n      bounceOnAdd: true,\n      title: 'Llevar aquí',\n    })\n      .addTo(this.map)\n      .bindPopup('Llevar aquí')\n      .openPopup();\n  }\n  constructor() { }\n\n  ngAfterViewInit() {\n  }\n\n}\n","<div class=\"map-frame\">\n    <div id=\"map\"></div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.sass']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n    <div class=\"icons-footer\">\n        <img class=\"icon-footer\" src=\"../assets/img/facebook.png\" alt=\"\">\n        <img class=\"icon-footer\" src=\"../assets/img/twitter.png\" alt=\"\">\n        <img class=\"icon-footer\" src=\"../assets/img/instagram.png\" alt=\"\">\n    </div>\n    <img class=\"logo-footer\" src=\"../assets/img/Logo2-blanco.png\" alt=\"\">\n    <p class=\"address-footer\">901-947 South Drive, Houston,<br> TX 77057, USA <br> Telephone: +1 555 1234\n    </p>\n    <img class=\"logo-car-footer\" src=\"../assets/img/Logo-footer.png\" alt=\"\">\n    <hr>\n    <p class=\"copyright-footer\">\n        Copyright © 2021 NanyTemplate. All rights reserved.\n    </p>\n</footer>\n","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CiudadesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  obtenerCiudades():Observable<any> {\n    return this.httpClient.get(`${API_BASE_URL}/ciudades`);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { faUserCircle, faSignOutAlt, faClipboardList} from '@fortawesome/free-solid-svg-icons';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.sass']\n})\nexport class NavbarComponent implements OnInit {\n  faUserCircle = faUserCircle;\n  faSignOutAlt = faSignOutAlt;\n  faClipboardList = faClipboardList;\n  islogged: boolean = false;\n  usuario: any = '';\n\n  constructor(\n    private cookiesService: CookieService,\n    private _route: Router\n  ) { }\n\n  ngOnInit(): void {\n    if (this.cookiesService.check('nanyUsuarioId')) {\n      this.islogged = true;\n      this.usuario = {\n        _id: this.cookiesService.get('nanyUsuarioId'),\n        nombre: this.cookiesService.get('nanyUsuarioNombre'),\n        apellido: this.cookiesService.get('nanyUsuarioApellido'),\n      }\n    }\n  }\n\n  logOut() {\n    this.cookiesService.delete('nanyUsuarioId');\n    this.cookiesService.delete('nanyUsuarioNombre');\n    this.cookiesService.delete('nanyUsuarioApellido');\n    this.islogged = false;\n    this.usuario = '';\n    this._route.navigate(['/']);\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <div class=\"container-fluid\">\r\n      <img src=\"../assets/img/Logo-Carrier.png\" id=\"img-logo\" routerLink=\"/Home\">\r\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarContent\" \r\n      aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" *ngIf=\"usuario == ''\" id=\"noLoggedDropdown\">\r\n          <li class=\"nav-item\">\r\n            <img src=\"../assets/img/Logo2-Carrier.png\" id=\"logoNavbar\"  alt=\"...\">\r\n            <hr>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <button type=\"button\" class=\"nav-link btn btn-light\" id=\"btn-1\" routerLink=\"/Requisitos\">Aplica</button>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <button type=\"button\" class=\"nav-link btn btn-light mt-3\" id=\"btn-2\" routerLink=\"/Inicio-sesion\">Iniciar Sesion</button>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <button type=\"button\" class=\"nav-link btn btn-light mt-3 mb-3\" id=\"btn-3\" routerLink=\"/Registro\">Registrate</button>\r\n          </li>\r\n        </ul>\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" *ngIf=\"usuario != ''\" id=\"LoggedDropdown\">\r\n          <li class=\"nav-item\">\r\n            <img src=\"../assets/img/Logo2-Carrier.png\" id=\"logoNavbar\" routerLink=\"/Home\">\r\n            <hr>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <button type=\"button\" class=\"nav-link btn btn-loggin\" id=\"btnLogged1\">\r\n              <fa-icon class=\"fa-dropdown icon-user\" [icon]=\"faUserCircle\"></fa-icon>\r\n              | {{usuario.nombre}} {{usuario.apellido}}</button>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <button type=\"button\" class=\"nav-link btn btn-loggin mt-3\" id=\"btnLogged2\" routerLink=\"/Historial-orden\">\r\n              <fa-icon class=\"fa-dropdown\" [icon]=\"faSignOutAlt\" id=\"fa-his\"></fa-icon>\r\n              | Historial de órdenes</button>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n          </li>\r\n          <button type=\"button\" class=\"nav-link btn btn-loggin mt-3 mb-3\" id=\"btnLogged3\" (click)=\"logOut()\">\r\n            <fa-icon class=\"fa-dropdown icon-user\" [icon]=\"faClipboardList\"></fa-icon>\r\n           | Cerrar Sesión</button>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </nav>\r\n","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private httpClient: HttpClient) { }\n  \n  login(data: any): Observable<any> {\n    return this.httpClient.post(`${API_BASE_URL}/auth`,data);\n  }\n}\n","import { API_BASE_URL } from '../app.config';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, ObservedValueOf } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrdenesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  obtenerOrdenes(): Observable<any>{\n    return this.httpClient.get(`${API_BASE_URL}/ordenes`);\n  }\n\n  obtenerOrden(idOrden: String): Observable<any>{\n    return this.httpClient.get(`${API_BASE_URL}/ordenes/${idOrden}`);\n  }\n\n  actualizarOrden(idOrden: String, orden: any):  Observable<any>{\n    return this.httpClient.put(`${API_BASE_URL}/ordenes/${idOrden}`, orden);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html'\n})\n\nexport class LandingPageComponent implements OnInit {\n\n  faCoffee = faCoffee;\n  faUser = faUser;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-navbar></app-navbar>\r\n\r\n<div class=\"container-fluid \">\r\n  <div id=\"carouselOnly\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n      <div class=\"carousel-inner\">\r\n        <div class=\"carousel-item active\">\r\n          <img src=\"../assets/img/1.png\" class=\"d-block w-100 carousel-landing\" alt=\"...\">\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img src=\"../assets/img/2.png\" class=\"d-block w-100 carousel-landing\" alt=\"...\">\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img src=\"../assets/img/3.png\" class=\"d-block w-100 carousel-landing\" alt=\"...\">\r\n        </div>\r\n        <div class=\"carousel-item\">\r\n          <img src=\"../assets/img/4.jpg\" class=\"d-block w-100 carousel-landing\" alt=\"...\">\r\n        </div>\r\n      </div>\r\n  </div>\r\n  <div class=\"carousel-info \">\r\n    <h6>Comienza a trabajar con nosotros desde este momento</h6>\r\n    <button class=\"btn btn-primary\" type=\"button\" routerLink=\"/Requisitos\">Aplica ya</button>\r\n  </div>\r\n  <div id=\"div-text\"><h5>Sé parte de nuestro <br> equipo de repartidores</h5></div>\r\n  <div class=\"row row-landing\">\r\n    <div class=\"col-6\">\r\n      <img src=\"../assets/img/Icono-Nany.png\" alt=\"...\" id=\"icono\">\r\n    </div>\r\n    <div class=\"col-6\" id=\"div-service\">\r\n      <h6>Estamos comprometidos a ser el mejor servicio del pais </h6>\r\n      <button type=\"button\" class=\"btn btn-success mt-2\" id=\"btn-afiliado\" routerLink=\"/Registro\">Afiliate </button>\r\n    </div>\r\n  </div>\r\n  <div id=\"div-beneficios\">\r\n    <h5>¿Que beneficios obtienes?</h5>\r\n    <div class=\"row row-landing\">\r\n      <div class=\"col-4 mt-3\">\r\n        <img src=\"../assets/img/reloj.png\" alt=\"...\" class=\"benef mb-2\">\r\n        <h6>Horario flexible</h6>\r\n      </div>\r\n      <div class=\"col-4 mt-3\">\r\n        <img src=\"../assets/img/monedas.png\" alt=\"...\" class=\"benef mb-2\">\r\n        <h6>Ingresos atractivos</h6>\r\n      </div>\r\n      <div class=\"col-4 mt-3\">\r\n        <img src=\"../assets/img/calendario.png\" alt=\"...\" class=\"benef mb-2\">\r\n        <h6>Libertad de elección</h6>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"text-requisito\">\r\n    <h5>Requisitos para ser parte de</h5>\r\n    <img src=\"../assets/img/Logo2-Carrier.png\" alt=\"...\" id=\"img-logo2\">\r\n  </div>\r\n  <div id=\"requisito\">\r\n    <div class=\"row row-landing\">\r\n      <div class=\"col-4\">\r\n        <img src=\"../assets/img/moto.png\" alt=\"...\" class=\"requis mb-2\">\r\n        <h6>Motocicleta propia</h6>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <img src=\"../assets/img/licencia.png\" alt=\"...\" class=\"requis mb-2\">\r\n        <h6>Licencia de conducir vigente</h6>\r\n      </div>\r\n      <div class=\"col-4\">\r\n        <img src=\"../assets/img/telefono.png\" alt=\"...\" class=\"requis mb-2\">\r\n        <h6>Telefono movil con datos</h6>\r\n      </div>\r\n      <button type=\"button\" class=\"btn btn-success mt-3\" id=\"btn-requisito\" routerLink=\"/Requisitos\">Lee los requisitos</button>\r\n    </div>\r\n    <hr>\r\n  </div>\r\n  <div id=\"preguntas\">\r\n    <h3>Preguntas frecuentes</h3>\r\n    <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"flush-headingOne\">\r\n          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\r\n            ¿Que es ser un repartidor nany?\r\n          </button>\r\n        </h2>\r\n        <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\r\n          <div class=\"accordion-body\">Es la persona encargada de entregar nuestros productos hasta la puerta de la casa del cliente</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\r\n          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\r\n            ¿Se debe contar con experiencia?\r\n          </button>\r\n        </h2>\r\n        <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\r\n          <div class=\"accordion-body\">Si, debes tener minimo un año de experiencia para ser parte de nosotros</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"flush-headingThree\">\r\n          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\r\n            ¿Cual es el proceso para ser parte de nany?\r\n          </button>\r\n        </h2>\r\n        <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n          <div class=\"accordion-body\">Debes llenar un formulario de inscripcion una vez que cumplas con todos los requisitos y luego esperar \r\n            que nuestros administradores acepten tu solicitud</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"accordion-item\">\r\n        <h2 class=\"accordion-header\" id=\"flush-headingThree\">\r\n          <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseFour\" aria-expanded=\"false\" aria-controls=\"flush-collapseFour\">\r\n            ¿Que servicios ofrece nany?\r\n          </button>\r\n        </h2>\r\n        <div id=\"flush-collapseFour\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\r\n          <div class=\"accordion-body\">Un servicio de delivery completamente seguro con personal altamente calificado y con horarios flexibles\r\n            que se adaptan a tu necesidad</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <app-footer></app-footer>\r\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { RegisterComponent } from \"./register/register.component\";\nimport { LoginComponent } from \"./login/login.component\";\nimport { LandingPageComponent } from \"./landing-page/landing-page.component\";\nimport { RequisitosComponent } from \"./requisitos/requisitos.component\";\nimport { HomepageComponent } from \"./homepage/homepage.component\";\nimport { DetalleOrdenComponent } from \"./detalle-orden/detalle-orden.component\";\nimport { HistorialOrdenesComponent } from \"./historial-ordenes/historial-ordenes.component\";\n\nconst routes: Routes = [\n  {path: '', component: LandingPageComponent},\n  {path: 'Registro', component: RegisterComponent},\n  {path: 'Inicio-sesion', component: LoginComponent},\n  {path: 'Requisitos', component: RequisitosComponent},\n  {path: 'Home', component: HomepageComponent},\n  {path: 'Detalle-orden/:_id', component: DetalleOrdenComponent},\n  {path: 'Historial-orden', component: HistorialOrdenesComponent},\n  {path: '**', pathMatch: 'full', redirectTo: ''},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { AuthService } from '../services/auth.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  formLogin = new FormGroup({\r\n    correo: new FormControl('', [\r\n      Validators.required,\r\n      Validators.pattern(\r\n        /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i\r\n      ),\r\n    ]),\r\n    password: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n  });\r\n  responseLoggin: any = '';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private cookiesService: CookieService,\r\n    private _route:Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  login(){\r\n    console.log('El usuario a autenticar:', this.formLogin);\r\n    this.authService.login(this.formLogin.value).subscribe(\r\n      result=>{\r\n        if (result.code == 1) {\r\n          const dateNow = new Date();\r\n          dateNow.setMinutes(dateNow.getMinutes() + 60);\r\n          this.cookiesService.set('nanyUsuarioId', result.usuario._id, dateNow);\r\n          this.cookiesService.set(\r\n            'nanyUsuarioNombre',\r\n            result.usuario.nombre,\r\n            dateNow\r\n          );\r\n          this.cookiesService.set(\r\n            'nanyUsuarioApellido',\r\n            result.usuario.apellido,\r\n            dateNow\r\n          );\r\n        } else if (result.code == 2) {\r\n          // Contrasenia Incorrecta\r\n          this.responseLoggin = result;\r\n          this.password.setValue('');\r\n        } else {\r\n          // Correo Incorrecto\r\n          this.responseLoggin = result;\r\n          this.correo.setValue('');\r\n        }\r\n        console.log(result.message);\r\n\r\n        var estado = result.usuario.tipoUsuario.motoristaInfo.estadoAdmision;\r\n        if (estado == false) {\r\n          Swal.fire({\r\n            icon: 'error',\r\n            title: 'Lo sentimos!',\r\n            text: 'Aún no estas admitido para ser motorista de nany!',\r\n          })\r\n        } else {\r\n          console.log('Logeado con exito');\r\n          this._route.navigate(['/Home']);\r\n        }\r\n        \r\n      },\r\n      error=>{\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  get correo() {\r\n    return this.formLogin.get('correo');\r\n  }\r\n\r\n  get password() {\r\n    return this.formLogin.get('password');\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <img src=\"../assets/img/Logo-Carrier.png\" id=\"logo\" routerLink=\"/\">\r\n    <form class=\"needs-validation\" novalidate [formGroup]=\"formLogin\">\r\n        <div class=\"form-contenido\">\r\n            <h2>Inicio de Sesión</h2>\r\n            <div>\r\n                <h5>Correo electrónico</h5>\r\n                <input type=\"text\" class=\"form-control\"\r\n                    [ngClass]=\"{'is-invalid': correo.invalid && (correo.dirty || correo.touched), 'is-valid': correo.valid}\"\r\n                    placeholder=\"ejemplo@gmail.com\" formControlName=\"correo\" required>\r\n                <div class=\"invalid-feedback login-feedback\" *ngIf=\"correo.errors\">\r\n                    <span *ngIf=\"correo.errors.pattern && correo.errors.pattern != null\">Correo Inválido</span>\r\n                    <span *ngIf=\"correo.errors.required && (responseLoggin.code != 0)\">Este campo no puede quedar vacío</span>\r\n                    <span *ngIf=\"responseLoggin.code == 0\">{{responseLoggin.message}}</span>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <h5>Contraseña</h5>\r\n                <input type=\"password\" class=\"form-control\" name=\"password\" autocomplete=\"on\"\r\n                    [ngClass]=\"{'is-invalid': password.invalid && (password.dirty || password.touched), 'is-valid': password.valid}\"\r\n                    formControlName=\"password\" required>\r\n                <div class=\"invalid-feedback login-feedback\" *ngIf=\"password.errors\">\r\n                    <span *ngIf=\"password.errors.required && (responseLoggin.code != 2)\">Este campo no puede quedar vacío</span>\r\n                    <span *ngIf=\"password.errors.minlength && (responseLoggin.code != 2)\">Mínimo 8 caracteres</span>\r\n                    <span *ngIf=\"responseLoggin.code == 2\">{{responseLoggin.message}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-links pt-2\">\r\n            <button type=\"button\" class=\"btn btn-success\" id=\"btn-login\" [disabled]=\"!formLogin.valid\" (click)=\"login()\"\r\n            >Iniciar sesión</button>\r\n            <div class=\"response-loggin\" *ngIf=\"\">\r\n                <span>{{responseLoggin.message}}</span>\r\n            </div>\r\n            <h6>¿Aun no tienes una cuenta?</h6>\r\n            <a routerLink=\"/Registro\" id=\"registro\">Registrate</a>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { OrdenesService } from '../services/ordenes.service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { UsuariosService } from '../services/usuarios.service';\nimport Swal from 'sweetalert2';\nimport { MapComponent } from '../map/map.component';\n\n@Component({\n  selector: 'app-detalle-orden',\n  templateUrl: './detalle-orden.component.html'\n})\nexport class DetalleOrdenComponent implements OnInit {\n  @ViewChild ('ubicacion') mapaComponent: MapComponent;\n\n  region: Boolean = true;\n  idOrden: any = '';\n  detalleOrden:any = '';\n  ordenesUsuario: any = [];\n  latitud: any = '';\n  longitud : any = '';\n  idUsuario: any  = this.cookiesService.get('nanyUsuarioId');\n\n  constructor(\n    private _route: Router,\n    private ruta: ActivatedRoute,\n    private ordenesService: OrdenesService,\n    private cookiesService: CookieService,\n    private usuariosService: UsuariosService\n  ) { }\n\n  ngOnInit(): void {\n    this.ruta.params.subscribe(\n      params => {\n        this.idOrden = params._id;\n      }\n    )\n    \n    this.ordenesService.obtenerOrden(this.idOrden).subscribe(\n      result=>{\n        this.detalleOrden = result;\n        this.mapaComponent.initMap(this.detalleOrden.ubicacionOrden.latitud, this.detalleOrden.ubicacionOrden.longitud);\n        console.log(this.detalleOrden);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    \n    this.usuariosService.obtenerOrdenesUsuario(this.idUsuario).subscribe(\n      result=>{\n        this.ordenesUsuario = result.ordenes;\n        console.log(this.ordenesUsuario);\n      },\n      error=>{\n        console.log(error);\n      }\n    )\n    \n  }\n\n  tomarOrden(){\n    let entrega = 0;\n    for (let i = 0; i < this.ordenesUsuario.length; i++) {\n      if (this.ordenesUsuario[i].tipoEstado.idEstado != \"4\") {\n        entrega++;\n      }\n    }\n\n    if (entrega != 0) {\n      Swal.fire({\n        icon: 'error',\n        title: 'Tienes ordenes por entregar!',\n        text: 'No puedes tomar mas de una orden a la vez'\n      });\n    } else {\n      this.detalleOrden.tipoEstado = {\n        idEstado: \"1\",\n        nombreEstado: \"En camino\"\n      };\n  \n      this.detalleOrden.motorista = {\n        _id: this.cookiesService.get('nanyUsuarioId'),\n        nombre: this.cookiesService.get('nanyUsuarioNombre'),\n        apellido: this.cookiesService.get('nanyUsuarioApellido')\n      };\n  \n      this.ordenesService.actualizarOrden(this.idOrden, this.detalleOrden).subscribe(\n        result=>{\n          console.log(result);\n          this._route.navigate(['/Home']);\n        },\n        error=>{\n          console.log(error);\n        }\n      )\n    }\n  }\n\n  latlong(latlong){\n    console.log(latlong);\n    this.latitud = latlong.lat;\n    this.longitud = latlong.lng;\n  }\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container-fluid\">\n    <h5 class=\"text2\">Detalle de Orden</h5>\n    <div *ngFor=\"let detalle of detalleOrden.detalleProductos\">\n        <div class=\"img-product\">\n            <img src=\"{{detalle.producto.imagen}}\" alt=\"...\">\n        </div>\n        <div class=\"details pb-4\">\n            <h1>{{detalle.producto.nombre}}</h1>\n            <p>{{detalle.producto.descripcion}}</p>\n            <hr>\n            <h5>Cantidad: {{detalle.cantidad}}</h5>\n            <h5>Precio unitario: Lps. {{detalle.producto.precio}}</h5>\n            <h5>Categoria: {{detalle.producto.categoria}}</h5>\n            <h5>Empresa: {{detalle.producto.empresa}}</h5>\n        </div>\n    </div>\n    <h5 id=\"txt-map\">Ubicación de la orden</h5>\n    <app-map #ubicacion></app-map>\n    <button type=\"button\" class=\"btn btn-success mb-3\" id=\"btn-taken\" (click)=\"tomarOrden()\">Tomar orden</button>\n</div>\n\n<app-footer></app-footer>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}